/*import gplay from 'google-play-scraper';
import fetch from 'node-fetch';

let handler = async (m, { conn, args, usedPrefix: prefix, command }) => {

    if (!args[0]) {
        console.log('Argumento vac√≠o, enviando mensaje de ayuda');
        return conn.reply(m.chat, `*${xdownload} Ingresa un enlace de descarga de la PlayStore.*\n> *\`Ejemplo:\`* ${prefix}playstore https://play.google.com/store/apps/details?id=com.whatsapp`, m);
    }

    m.react('‚åõ');

    const url = args[0];

    let packageName;
    try {
        packageName = new URL(url).searchParams.get("id");
        if (!packageName) throw new Error();
    } catch {
        return conn.reply(m.chat, `*‚ùå La URL proporcionada no es v√°lida o no contiene un ID de aplicaci√≥n.*`, m);
    }

    console.log(`ID de paquete: ${packageName}`);

    let info;
    try {
        info = await gplay.app({ appId: packageName });
    } catch (error) {
        console.error(error);
        return conn.reply(m.chat, `*‚ùå No se pudo encontrar la aplicaci√≥n. Aseg√∫rate de que el enlace sea correcto.*`, m);
    }

    const h = info.title;
    console.log(`T√≠tulo de la aplicaci√≥n: ${h}\nID de la aplicaci√≥n: ${info.appId}`);

    let link = `https://d.apkpure.com/b/APK/${info.appId}?version=latest`;

    conn.sendFile(m.chat, link, `${h}.apk`, ``, m, false, { mimetype: 'application/vnd.android.package-archive', asDocument: true });
    m.react('‚úÖÔ∏è');

    conn.reply(m.chat, `*üöÄ Se esta enviando \`${h}\` Aguarde un momento*`, m);
}

handler.help = ['playstore']; 
handler.tags = ['download'];
handler.command = /^(playstore)$/i;
export default handler;*/

import gplay from 'google-play-scraper';
import fetch from 'node-fetch';

let handler = async (m, { conn, args, usedPrefix: prefix, command }) => {
    if (!args[0]) {
        return conn.reply(m.chat, `*üì• Ingresa un enlace de la Play Store para descargar una app APK.*\n> *Ejemplo:* ${prefix}playstore https://play.google.com/store/apps/details?id=com.whatsapp`, m);
    }

    m.react('‚è≥');

    const url = args[0];
    let packageName;
    try {
        packageName = new URL(url).searchParams.get("id");
        if (!packageName) throw new Error();
    } catch {
        return conn.reply(m.chat, `‚ùå *La URL proporcionada no es v√°lida o no contiene un ID de aplicaci√≥n.*`, m);
    }

    let info;
    try {
        info = await gplay.app({ appId: packageName });
    } catch (error) {
        console.error(error);
        return conn.reply(m.chat, `‚ùå *No se pudo encontrar la aplicaci√≥n en Play Store. Verifica el enlace.*`, m);
    }

    const appName = info.title;
    const downloadLink = `https://d.apkpure.com/b/APK/${info.appId}?version=latest`;

    // Verificamos si el archivo est√° disponible y es un APK v√°lido
    try {
        const head = await fetch(downloadLink, {
            method: 'HEAD',
            headers: {
                'User-Agent': 'Mozilla/5.0 (Android 10; Mobile; rv:91.0) Gecko/91.0 Firefox/91.0'
            }
        });

        const contentType = head.headers.get('content-type') || '';
        if (!head.ok || !contentType.includes('application/vnd.android.package-archive')) {
            return conn.reply(m.chat, `‚ùå *El archivo APK no est√° disponible ahora mismo. Intenta de nuevo m√°s tarde.*`, m);
        }
    } catch (error) {
        console.error(error);
        return conn.reply(m.chat, `‚ùå *Error al verificar el archivo APK. Vuelve a intentarlo m√°s tarde.*`, m);
    }

    try {
        await conn.sendFile(m.chat, downloadLink, `${appName}.apk`, '', m, false, {
            mimetype: 'application/vnd.android.package-archive',
            asDocument: true
        });

        m.react('‚úÖ');
        conn.reply(m.chat, `‚úÖ *Se est√° enviando* \`${appName}\`\nüì¶ *Tama√±o estimado: revisa despu√©s de recibir el archivo*`, m);
    } catch (err) {
        console.error(err);
        m.react('‚ùå');
        conn.reply(m.chat, `‚ùå *Error al enviar el archivo APK. Puede que el servidor est√© rechazando la conexi√≥n.*`, m);
    }
};

handler.help = ['playstore'];
handler.tags = ['download'];
handler.command = /^playstore$/i;
export default handler;
